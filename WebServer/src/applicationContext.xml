<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd"
		default-lazy-init="false">


	<bean id="myScheduler"
        class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="myTriggersA"></ref>
            </list>
        </property>
        <property name="autoStartup" value="true"></property>
    </bean>
    <bean id="myTriggersA"
        class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="myJobDetailA">
        </property>
        <property name="cronExpression">
            <value>0 */30 * * * ?</value>
        </property>
    </bean>
    <bean id="myJobDetailA"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="myJobA">
        </property>
        <property name="targetMethod" value="work"></property>
        <property name="concurrent" value="false" />

    </bean>
    <bean id="myJobA" class="com.lovebear.dao.RefreshDao"/>

	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="url"
			value="jdbc:mysql://localhost:3306/website">
		</property>
		<property name="username" value="root"></property>
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
	</bean>
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.connection.release_mode">
					after_statement
				</prop>
 
			</props>
		</property>
		<property name="mappingResources">
			<list>
				<value>com/lovebear/entity/User.hbm.xml</value>
				<value>com/lovebear/entity/Data.hbm.xml</value>
				<value>com/lovebear/entity/society.hbm.xml</value>
				<value>com/lovebear/entity/internation.hbm.xml</value>
				<value>com/lovebear/entity/sport.hbm.xml</value>
				<value>com/lovebear/entity/finance.hbm.xml</value>
				<value>com/lovebear/entity/entertain.hbm.xml</value>
				<value>com/lovebear/entity/tech.hbm.xml</value>
				<value>com/lovebear/entity/military.hbm.xml</value></list>
		</property></bean>
	<bean class="org.springframework.orm.hibernate3.HibernateTransactionManager" id="transactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<tx:advice transaction-manager="transactionManager" id="txAdvice">
		<tx:attributes>
			<tx:method name="get*" propagation="NEVER"/>
			<tx:method name="set*" propagation="NEVER"/>
			<tx:method name="query*" propagation="NEVER"/>
			<tx:method name="find*" propagation="NEVER"/>
			<tx:method name="*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut expression="execution(* com.lovebear.service..*(..))" id="service"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="service"/>
	</aop:config>
	<!--  dao  -->
	<bean class="com.lovebear.dao.UserDao" id="userDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!--  service  -->
	<bean class="com.lovebear.service.UserService" id="userService">
		<property name="userDao" ref="userDao"></property>
	</bean>
	<!--  actions  -->
	<bean class="com.lovebear.actions.UserAction" id="userAction"
	scope="prototype">
		<property name="userService" ref="userService"></property>
	</bean>
	
	<!--  dao  -->
	<bean class="com.lovebear.dao.OperateDao" id="operateDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!--  service  -->
	<bean class="com.lovebear.service.DataService" id="dataService">
		<property name="operateDao" ref="operateDao"></property>
	</bean>
	<!--  actions  -->
	<bean class="com.lovebear.actions.DataAction" id="dataAction"
	scope="prototype">
		<property name="dataService" ref="dataService"></property>
	</bean>
	
	<!--  dao  -->
	<bean class="com.lovebear.admindao.TopDao" id="topDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!--  actions  -->
	<bean class="com.lovebear.admin.adminLogin" id="adminLogin"
	scope="prototype">
	</bean>
	<!--  dao  -->
	<bean class="com.lovebear.admindao.FinanceDao" id="financeDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!--  dao  -->
	<bean class="com.lovebear.admindao.EntertainDao" id="entertainDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!--  dao  -->
	<bean class="com.lovebear.admindao.SportDao" id="sportDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!--  dao  -->
	<bean class="com.lovebear.admindao.MilitaryDao" id="militaryDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!--  dao  -->
	<bean class="com.lovebear.admindao.TechDao" id="techDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!--  dao  -->
	<bean class="com.lovebear.admindao.InternationDao" id="internationDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!--  dao  -->
	<bean class="com.lovebear.admindao.SocietyDao" id="societyDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!--  dao  -->
	<bean class="com.lovebear.admindao.UserInfoDao" id="userInfoDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

</beans>